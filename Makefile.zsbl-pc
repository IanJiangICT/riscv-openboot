include common.mk

PC_CONFIG = -D CORE_TYPE_PC

elfs = $(BUILD_DIR)/zsbl_pc.elf

ld_pc = $(BUILD_DIR)/zsbl_pc.ld
lds_pc = $(SRC_DIR)/zsbl_pc.lds

a_objs = $(elfs:elf=ao)
ifdef CONF_PC_ACTS_AS_MC
c_objs = $(BUILD_DIR)/zsbl_func.co
c_objs += $(BUILD_DIR)/bootconf0.co
c_objs += $(BUILD_DIR)/storage_func.co
c_objs += $(BUILD_DIR)/serial_func.co
c_objs += $(BUILD_DIR)/plat_ops.co
c_objs += $(BUILD_DIR)/dw_uart.co
c_objs += $(BUILD_DIR)/dw_ssi.co
endif

objs = $(a_objs) $(c_objs)

default: all

all: $(elfs)

clean:
	rm -rf $(ld_pc)
	rm -rf $(ld_pc)-offchip
	rm -rf $(a_objs)
	rm -rf $(c_objs)
	rm -rf $(elfs)

objs: $(a_objs) $(c_objs)

$(ld_pc): $(lds_pc)
	$(CC) $(CFLAGS) -D PLAT_ROM_ZSBL_PC=PLAT_ROM_BASE+PLAT_ROM_OFFSET_PC -E -P - < $< -o $@
	$(CC) $(CFLAGS) -D PLAT_ROM_ZSBL_PC=PLAT_ROM_BASE_OFFCHIP+PLAT_ROM_OFFSET_PC -E -P - < $< -o $@-offchip

$(BUILD_DIR)/%.ao : $(SRC_DIR)/%.S
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(MC_CONFIG) -D __ASM__ $< -o $@

$(BUILD_DIR)/%.co : $(SRC_DIR)/%.c
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(MC_CONFIG) $< -o $@

$(BUILD_DIR)/zsbl_pc.elf : $(objs) $(ld_pc)
	$(LD) $(LDFLAGS) -T$(ld_pc) -o $@ $(objs)
	$(LD) $(LDFLAGS) -T$(ld_pc)-offchip -o $@-offchip $(objs)
	$(DUMP) -D $@ > $@-dump.S
	$(DUMP) -D $@-offchip > $@-offchip-dump.S
